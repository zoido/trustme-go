name: Go
on:
  push:
    branches: [master]
  pull_request:

jobs:

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v1
        with:
          go-version: 1.13

      - name: setup environment
        run: echo "::add-path::$(go env GOPATH)/bin"

      - name: cache linters
        uses: actions/cache@v1
        id: cachelinters
        with:
          path: ~/go/bin
          key: ${{ runner.os }}-linters-01
          restore-keys: |
            ${{ runner.os }}-linters-01


      - name: install linters
        run: |
          go get \
            golang.org/x/tools/cmd/goimports \
            github.com/mgechev/revive
        if: steps.cachelinters.outputs.cache-hit != 'true'

      - name: check out code
        uses: actions/checkout@v2

      - name: goimports
        run: goimports -d .

      - name: revive
        run: revive -config ci/revive.toml ./...

      - name: markdownlint
        uses: nosborn/github-action-markdown-cli@v1.1.1
        with:
          files: .

  build:
    name: Build
    runs-on: ubuntu-latest
    needs : [lint]
    steps:

      - uses: actions/setup-go@v1
        with:
          go-version: 1.13

      - uses: actions/checkout@v2

      - name: cache dependencies
        uses: actions/cache@v1
        id: cachedeps
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: get dependencies
        if: steps.cachedeps.outputs.cache-hit != 'true'
        run: |
          go get -v -t -d ./...

      - name: build
        run: go build -v .

  test:
    name: Test
    runs-on: ubuntu-latest
    needs : [build]
    steps:

      - uses: actions/setup-go@v1
        with:
          go-version: 1.13

      - uses: actions/checkout@v2

      - name: cache dependencies
        uses: actions/cache@v1
        id: cachedeps
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: get dependencies
        if: steps.cachedeps.outputs.cache-hit != 'true'
        run: |
          go get -v -t -d ./...

      - name: test
        run: |
          go test -v \
            -coverprofile=coverage.txt \
            -covermode=atomic \
            -coverpkg=github.com/zoido/trustme-go,\
              github.com/zoido/trustme-go/ca,\
              github.com/zoido/trustme-go/cert \
            ./...

      - name: collect code coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          yml: ./ci/codecov.yml
          file: ./coverage.txt
